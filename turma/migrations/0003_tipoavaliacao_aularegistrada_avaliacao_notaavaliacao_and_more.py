# Generated by Django 5.2.5 on 2025-09-02 11:58

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('alunos', '0001_initial'),
        ('turma', '0002_alter_turma_options_turma_data_criacao_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoAvaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Tipo')),
                ('descricao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição')),
                ('peso_default', models.DecimalField(decimal_places=1, default=1.0, max_digits=3, verbose_name='Peso Padrão')),
                ('cor_display', models.CharField(default='#3B82F6', max_length=7, verbose_name='Cor para Exibição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Tipo Ativo')),
            ],
            options={
                'verbose_name': 'Tipo de Avaliação',
                'verbose_name_plural': 'Tipos de Avaliação',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='AulaRegistrada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_aula', models.DateField(verbose_name='Data da Aula')),
                ('horario_inicio', models.TimeField(verbose_name='Horário de Início')),
                ('horario_fim', models.TimeField(verbose_name='Horário de Fim')),
                ('conteudo_programatico', models.TextField(verbose_name='Conteúdo Programático')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('chamada_realizada', models.BooleanField(default=False, verbose_name='Chamada Realizada')),
                ('data_registro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Registro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='turma.disciplina', verbose_name='Disciplina')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Professor')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aulas', to='turma.turma', verbose_name='Turma')),
            ],
            options={
                'verbose_name': 'Aula Registrada',
                'verbose_name_plural': 'Aulas Registradas',
                'ordering': ['-data_aula', 'horario_inicio'],
                'unique_together': {('turma', 'disciplina', 'data_aula', 'horario_inicio')},
            },
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome da Avaliação')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('data_aplicacao', models.DateField(verbose_name='Data de Aplicação')),
                ('valor_maximo', models.DecimalField(decimal_places=2, default=10.0, max_digits=4, verbose_name='Valor Máximo')),
                ('peso', models.DecimalField(decimal_places=1, default=1.0, max_digits=3, verbose_name='Peso')),
                ('ativo', models.BooleanField(default=True, verbose_name='Avaliação Ativa')),
                ('notas_lancadas', models.BooleanField(default=False, verbose_name='Notas Lançadas')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='turma.disciplina', verbose_name='Disciplina')),
                ('divisao_periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='turma.divisaoperiodoletivo', verbose_name='Período')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Professor')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='turma.turma', verbose_name='Turma')),
                ('tipo_avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='turma.tipoavaliacao', verbose_name='Tipo de Avaliação')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
                'ordering': ['-data_aplicacao', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='NotaAvaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nota')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('ausente', models.BooleanField(default=False, verbose_name='Ausente na Avaliação')),
                ('dispensado', models.BooleanField(default=False, verbose_name='Dispensado da Avaliação')),
                ('data_lancamento', models.DateTimeField(auto_now_add=True, verbose_name='Data do Lançamento')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alunos.aluno', verbose_name='Aluno')),
                ('avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='turma.avaliacao', verbose_name='Avaliação')),
                ('conceito', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='turma.conceito', verbose_name='Conceito')),
                ('usuario_lancamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Lançado por')),
            ],
            options={
                'verbose_name': 'Nota de Avaliação',
                'verbose_name_plural': 'Notas de Avaliações',
                'ordering': ['aluno__nome'],
                'unique_together': {('avaliacao', 'aluno')},
            },
        ),
        migrations.CreateModel(
            name='RegistroFrequencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situacao', models.CharField(choices=[('PRESENTE', 'Presente'), ('AUSENTE', 'Ausente'), ('JUSTIFICADO', 'Ausente Justificado'), ('ATRASADO', 'Atrasado')], default='PRESENTE', max_length=15, verbose_name='Situação')),
                ('observacoes', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observações')),
                ('data_registro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Registro')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alunos.aluno', verbose_name='Aluno')),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequencias', to='turma.aularegistrada', verbose_name='Aula')),
                ('usuario_registro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
            ],
            options={
                'verbose_name': 'Registro de Frequência',
                'verbose_name_plural': 'Registros de Frequência',
                'ordering': ['aluno__nome'],
                'unique_together': {('aula', 'aluno')},
            },
        ),
        migrations.CreateModel(
            name='RelatorioFrequencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_aulas', models.IntegerField(default=0, verbose_name='Total de Aulas')),
                ('presencas', models.IntegerField(default=0, verbose_name='Presenças')),
                ('faltas', models.IntegerField(default=0, verbose_name='Faltas')),
                ('faltas_justificadas', models.IntegerField(default=0, verbose_name='Faltas Justificadas')),
                ('percentual_frequencia', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='% Frequência')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alunos.aluno', verbose_name='Aluno')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='turma.disciplina', verbose_name='Disciplina')),
                ('divisao_periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='turma.divisaoperiodoletivo', verbose_name='Período')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='turma.turma', verbose_name='Turma')),
            ],
            options={
                'verbose_name': 'Relatório de Frequência',
                'verbose_name_plural': 'Relatórios de Frequência',
                'ordering': ['aluno__nome'],
                'unique_together': {('aluno', 'turma', 'disciplina', 'divisao_periodo')},
            },
        ),
    ]
