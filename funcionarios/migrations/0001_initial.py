# Generated by Django 5.2.5 on 2025-08-22 21:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('codigo', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('nome_social', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome Social')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], max_length=1, verbose_name='Sexo')),
                ('estado_civil', models.CharField(choices=[('SOLTEIRO', 'Solteiro(a)'), ('CASADO', 'Casado(a)'), ('DIVORCIADO', 'Divorciado(a)'), ('VIUVO', 'Viúvo(a)'), ('UNIAO_ESTAVEL', 'União Estável')], max_length=20, verbose_name='Estado Civil')),
                ('cor_raca', models.CharField(choices=[('BRANCA', 'Branca'), ('PRETA', 'Preta'), ('PARDA', 'Parda'), ('AMARELA', 'Amarela'), ('INDIGENA', 'Indígena'), ('NAO_DECLARADO', 'Não declarado')], max_length=20, verbose_name='Cor/Raça')),
                ('nacionalidade', models.CharField(default='Brasileira', max_length=100, verbose_name='Nacionalidade')),
                ('naturalidade', models.CharField(max_length=100, verbose_name='Naturalidade')),
                ('uf_nascimento', models.CharField(max_length=2, verbose_name='UF de Nascimento')),
                ('nome_mae', models.CharField(max_length=255, verbose_name='Nome da Mãe')),
                ('nome_pai', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Pai')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('celular', models.CharField(blank=True, max_length=20, null=True, verbose_name='Celular')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('cep', models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('numero', models.CharField(max_length=10, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('uf', models.CharField(max_length=2, verbose_name='UF')),
                ('tipo_arquivo', models.CharField(choices=[('CORRENTE', 'Arquivo Corrente'), ('PERMANENTE', 'Arquivo Permanente')], default='CORRENTE', max_length=20, verbose_name='Tipo de Arquivo')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='funcionarios/fotos/', verbose_name='Foto')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('usuario_cadastro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='funcionarios_cadastrados', to=settings.AUTH_USER_MODEL, verbose_name='Usuário que Cadastrou')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='FormacaoSuperior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curso', models.CharField(max_length=255, verbose_name='Curso')),
                ('instituicao', models.CharField(max_length=255, verbose_name='Instituição')),
                ('ano_conclusao', models.IntegerField(verbose_name='Ano de Conclusão')),
                ('tipo_curso', models.CharField(choices=[('GRADUACAO', 'Graduação'), ('ESPECIALIZACAO', 'Especialização'), ('MESTRADO', 'Mestrado'), ('DOUTORADO', 'Doutorado')], max_length=20, verbose_name='Tipo de Curso')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formacoes_superiores', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Formação Superior',
                'verbose_name_plural': 'Formações Superiores',
            },
        ),
        migrations.CreateModel(
            name='Escolaridade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(choices=[('FUNDAMENTAL_INCOMPLETO', 'Ensino Fundamental Incompleto'), ('FUNDAMENTAL_COMPLETO', 'Ensino Fundamental Completo'), ('MEDIO_INCOMPLETO', 'Ensino Médio Incompleto'), ('MEDIO_COMPLETO', 'Ensino Médio Completo'), ('SUPERIOR_INCOMPLETO', 'Ensino Superior Incompleto'), ('SUPERIOR_COMPLETO', 'Ensino Superior Completo'), ('ESPECIALIZACAO', 'Especialização'), ('MESTRADO', 'Mestrado'), ('DOUTORADO', 'Doutorado'), ('POS_DOUTORADO', 'Pós-Doutorado')], max_length=30, verbose_name='Nível de Escolaridade')),
                ('curso', models.CharField(blank=True, max_length=255, null=True, verbose_name='Curso')),
                ('instituicao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Instituição')),
                ('ano_conclusao', models.IntegerField(blank=True, null=True, verbose_name='Ano de Conclusão')),
                ('funcionario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='escolaridade', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Escolaridade',
                'verbose_name_plural': 'Escolaridades',
            },
        ),
        migrations.CreateModel(
            name='DuploVinculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula_secundaria', models.CharField(max_length=20, unique=True, verbose_name='Matrícula Secundária')),
                ('funcao_secundaria', models.CharField(choices=[('DOCENTE', 'Docente'), ('AUXILIAR_EDUCACIONAL', 'Auxiliar/Assistente Educacional'), ('PROFISSIONAL_MONITOR', 'Profissional/Monitor de Atividade Complementar'), ('TRADUTOR_LIBRAS', 'Tradutor Intérprete de LIBRAS'), ('DIRETOR', 'Diretor'), ('VICE_DIRETOR', 'Vice-Diretor'), ('COORDENADOR_PEDAGOGICO', 'Coordenador Pedagógico'), ('ORIENTADOR_EDUCACIONAL', 'Orientador Educacional'), ('SUPERVISOR_ESCOLAR', 'Supervisor Escolar'), ('SECRETARIO_ESCOLAR', 'Secretário Escolar'), ('AUXILIAR_SECRETARIA', 'Auxiliar de Secretaria'), ('BIBLIOTECARIO', 'Bibliotecário'), ('AUXILIAR_BIBLIOTECA', 'Auxiliar de Biblioteca'), ('LABORATORISTA', 'Laboratorista'), ('AUXILIAR_SERVICOS_GERAIS', 'Auxiliar de Serviços Gerais'), ('VIGIA', 'Vigia'), ('PORTEIRO', 'Porteiro'), ('COZINHEIRO', 'Cozinheiro(a)'), ('AUXILIAR_COZINHA', 'Auxiliar de Cozinha'), ('NUTRICIONISTA', 'Nutricionista'), ('PSICOLOGO', 'Psicólogo'), ('ASSISTENTE_SOCIAL', 'Assistente Social'), ('OUTRO', 'Outro')], max_length=30, verbose_name='Função Secundária')),
                ('situacao_secundaria', models.CharField(choices=[('ATIVO', 'Ativo'), ('APOSENTADO', 'Aposentado'), ('AFASTADO_LICENCA', 'Afastado/Licença'), ('CEDIDO', 'Cedido'), ('CONTRATO_TERCEIRIZADO', 'Contrato Terceirizado'), ('CONTRATO_TEMPORARIO', 'Contrato Temporário'), ('FALECIDO', 'Falecido'), ('RESCISAO_CONTRATO', 'Rescisão de Contrato'), ('DESLIGADO', 'Desligado')], max_length=30, verbose_name='Situação Secundária')),
                ('tipo_vinculo_secundario', models.CharField(choices=[('CONCURSADO_EFETIVO', 'Concursado/Efetivo'), ('CONTRATO_TEMPORARIO', 'Contrato Temporário'), ('CONTRATO_TERCEIRIZADO', 'Contrato Terceirizado'), ('CONTRATO_CLT', 'Contrato CLT'), ('COMISSIONADO', 'Comissionado'), ('VOLUNTARIO', 'Voluntário')], max_length=30, verbose_name='Tipo de Vínculo Secundário')),
                ('data_admissao_secundaria', models.DateField(verbose_name='Data de Admissão Secundária')),
                ('data_demissao_secundaria', models.DateField(blank=True, null=True, verbose_name='Data de Demissão Secundária')),
                ('carga_horaria_secundaria', models.IntegerField(default=20, verbose_name='Carga Horária Secundária')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='duplos_vinculos', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Duplo Vínculo',
                'verbose_name_plural': 'Duplos Vínculos',
            },
        ),
        migrations.CreateModel(
            name='DocumentacaoFuncionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rg', models.CharField(max_length=20, verbose_name='RG')),
                ('rg_orgao_expedidor', models.CharField(max_length=10, verbose_name='Órgão Expedidor')),
                ('rg_uf', models.CharField(max_length=2, verbose_name='UF do RG')),
                ('rg_data_expedicao', models.DateField(blank=True, null=True, verbose_name='Data de Expedição')),
                ('cpf', models.CharField(max_length=14, unique=True, verbose_name='CPF')),
                ('nis_pis_pasep', models.CharField(blank=True, max_length=20, null=True, verbose_name='NIS/PIS/PASEP')),
                ('titulo_eleitor', models.CharField(blank=True, max_length=20, null=True, verbose_name='Título de Eleitor')),
                ('carteira_trabalho', models.CharField(blank=True, max_length=20, null=True, verbose_name='Carteira de Trabalho')),
                ('carteira_trabalho_serie', models.CharField(blank=True, max_length=10, null=True, verbose_name='Série')),
                ('carteira_trabalho_uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF da Carteira')),
                ('funcionario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='documentacao', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Documentação do Funcionário',
                'verbose_name_plural': 'Documentações dos Funcionários',
            },
        ),
        migrations.CreateModel(
            name='Disponibilidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matutino', models.BooleanField(default=False, verbose_name='Matutino')),
                ('vespertino', models.BooleanField(default=False, verbose_name='Vespertino')),
                ('noturno', models.BooleanField(default=False, verbose_name='Noturno')),
                ('funcionario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='disponibilidade', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Disponibilidade',
                'verbose_name_plural': 'Disponibilidades',
            },
        ),
        migrations.CreateModel(
            name='DisciplinaFuncionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disciplina', models.CharField(max_length=255, verbose_name='Disciplina')),
                ('habilitado', models.BooleanField(default=True, verbose_name='Habilitado')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disciplinas', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Disciplina do Funcionário',
                'verbose_name_plural': 'Disciplinas dos Funcionários',
            },
        ),
        migrations.CreateModel(
            name='DeficienciaFuncionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_deficiencia', models.CharField(choices=[('VISUAL', 'Deficiência Visual'), ('AUDITIVA', 'Deficiência Auditiva'), ('FISICA', 'Deficiência Física'), ('INTELECTUAL', 'Deficiência Intelectual'), ('MULTIPLA', 'Deficiência Múltipla'), ('AUTISM0', 'Transtorno do Espectro Autista'), ('OUTRAS', 'Outras')], max_length=20, verbose_name='Tipo de Deficiência')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deficiencias', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Deficiência do Funcionário',
                'verbose_name_plural': 'Deficiências dos Funcionários',
            },
        ),
        migrations.CreateModel(
            name='DadosFuncionais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(max_length=20, unique=True, verbose_name='Matrícula')),
                ('funcao', models.CharField(choices=[('DOCENTE', 'Docente'), ('AUXILIAR_EDUCACIONAL', 'Auxiliar/Assistente Educacional'), ('PROFISSIONAL_MONITOR', 'Profissional/Monitor de Atividade Complementar'), ('TRADUTOR_LIBRAS', 'Tradutor Intérprete de LIBRAS'), ('DIRETOR', 'Diretor'), ('VICE_DIRETOR', 'Vice-Diretor'), ('COORDENADOR_PEDAGOGICO', 'Coordenador Pedagógico'), ('ORIENTADOR_EDUCACIONAL', 'Orientador Educacional'), ('SUPERVISOR_ESCOLAR', 'Supervisor Escolar'), ('SECRETARIO_ESCOLAR', 'Secretário Escolar'), ('AUXILIAR_SECRETARIA', 'Auxiliar de Secretaria'), ('BIBLIOTECARIO', 'Bibliotecário'), ('AUXILIAR_BIBLIOTECA', 'Auxiliar de Biblioteca'), ('LABORATORISTA', 'Laboratorista'), ('AUXILIAR_SERVICOS_GERAIS', 'Auxiliar de Serviços Gerais'), ('VIGIA', 'Vigia'), ('PORTEIRO', 'Porteiro'), ('COZINHEIRO', 'Cozinheiro(a)'), ('AUXILIAR_COZINHA', 'Auxiliar de Cozinha'), ('NUTRICIONISTA', 'Nutricionista'), ('PSICOLOGO', 'Psicólogo'), ('ASSISTENTE_SOCIAL', 'Assistente Social'), ('OUTRO', 'Outro')], max_length=30, verbose_name='Função')),
                ('situacao_funcional', models.CharField(choices=[('ATIVO', 'Ativo'), ('APOSENTADO', 'Aposentado'), ('AFASTADO_LICENCA', 'Afastado/Licença'), ('CEDIDO', 'Cedido'), ('CONTRATO_TERCEIRIZADO', 'Contrato Terceirizado'), ('CONTRATO_TEMPORARIO', 'Contrato Temporário'), ('FALECIDO', 'Falecido'), ('RESCISAO_CONTRATO', 'Rescisão de Contrato'), ('DESLIGADO', 'Desligado')], max_length=30, verbose_name='Situação Funcional')),
                ('tipo_vinculo', models.CharField(choices=[('CONCURSADO_EFETIVO', 'Concursado/Efetivo'), ('CONTRATO_TEMPORARIO', 'Contrato Temporário'), ('CONTRATO_TERCEIRIZADO', 'Contrato Terceirizado'), ('CONTRATO_CLT', 'Contrato CLT'), ('COMISSIONADO', 'Comissionado'), ('VOLUNTARIO', 'Voluntário')], max_length=30, verbose_name='Tipo de Vínculo')),
                ('data_admissao', models.DateField(verbose_name='Data de Admissão')),
                ('data_demissao', models.DateField(blank=True, null=True, verbose_name='Data de Demissão')),
                ('data_final_contrato', models.DateField(blank=True, null=True, verbose_name='Data Final do Contrato')),
                ('carga_horaria_semanal', models.IntegerField(default=40, verbose_name='Carga Horária Semanal')),
                ('carga_horaria_contrato', models.IntegerField(default=40, verbose_name='Carga Horária do Contrato')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('funcionario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dados_funcionais', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Dados Funcionais',
                'verbose_name_plural': 'Dados Funcionais',
            },
        ),
        migrations.CreateModel(
            name='AssociacaoOutrosProfissionais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turma', models.CharField(max_length=100, verbose_name='Turma')),
                ('tipo_profissional', models.CharField(choices=[('AUXILIAR_EDUCACIONAL', 'Auxiliar/Assistente Educacional'), ('MONITOR_ATIVIDADE', 'Profissional/Monitor de Atividade Complementar'), ('TRADUTOR_LIBRAS', 'Tradutor Intérprete de LIBRAS')], max_length=30, verbose_name='Tipo de Profissional')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_termino', models.DateField(blank=True, null=True, verbose_name='Data de Término')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('usuario_cadastro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='associacoes_outros_cadastradas', to=settings.AUTH_USER_MODEL)),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='associacoes_outros', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Associação de Outros Profissionais',
                'verbose_name_plural': 'Associações de Outros Profissionais',
            },
        ),
        migrations.CreateModel(
            name='Habilitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_habilitacao', models.CharField(choices=[('LICENCIATURA', 'Licenciatura'), ('COMPLEMENTACAO_PEDAGOGICA', 'Complementação Pedagógica'), ('FORMACAO_PEDAGOGICA', 'Formação Pedagógica'), ('NORMAL_SUPERIOR', 'Normal Superior'), ('NORMAL_MEDIO', 'Normal Médio'), ('MAGISTEIO', 'Magistério'), ('BACHARELADO', 'Bacharelado'), ('TECNOLOGO', 'Tecnólogo'), ('NAO_TEM', 'Não tem habilitação específica')], max_length=30, verbose_name='Tipo de Habilitação')),
                ('area_conhecimento', models.CharField(max_length=255, verbose_name='Área de Conhecimento')),
                ('instituicao', models.CharField(max_length=255, verbose_name='Instituição')),
                ('ano_conclusao', models.IntegerField(verbose_name='Ano de Conclusão')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='habilitacoes', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Habilitação',
                'verbose_name_plural': 'Habilitações',
            },
        ),
        migrations.CreateModel(
            name='AssociacaoProfessor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turma', models.CharField(max_length=100, verbose_name='Turma')),
                ('disciplina', models.CharField(max_length=255, verbose_name='Disciplina')),
                ('tipo_associacao', models.CharField(choices=[('DISCIPLINA', 'Disciplina (frequência individual)'), ('TURMA', 'Turma (frequência em grupo)'), ('TURMA_AEE', 'Turma AEE/Atividade Complementar')], max_length=20, verbose_name='Tipo de Associação')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_termino', models.DateField(blank=True, null=True, verbose_name='Data de Término')),
                ('sem_docente', models.BooleanField(default=False, verbose_name='Disciplina não possui docente')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('usuario_cadastro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='associacoes_cadastradas', to=settings.AUTH_USER_MODEL)),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='associacoes', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Associação de Professor',
                'verbose_name_plural': 'Associações de Professores',
                'unique_together': {('funcionario', 'turma', 'disciplina', 'data_inicio')},
            },
        ),
    ]
